{"id":"index.html","dependencies":[{"name":"./js/three.js","dynamic":true,"resolved":"/Users/kon9759/Scratch/learnThree/js/three.js","parent":"/Users/kon9759/Scratch/learnThree/index.html"},{"name":"./js/FlyControls.js","dynamic":true,"resolved":"/Users/kon9759/Scratch/learnThree/js/FlyControls.js","parent":"/Users/kon9759/Scratch/learnThree/index.html"},{"name":"_css_loader","parent":"/Users/kon9759/Scratch/learnThree/index.html","resolved":"/usr/local/lib/node_modules/parcel/src/builtins/css-loader.js"}],"generated":{"html":"<html>\n  <head>\n    <title>Three.js Crash Course</title>\n\n    <style>body { margin: 0; }\n      canvas { width: 100%; height: 100%; };</style>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r79/three.min.js\"></script>\n  </head>\n\n  <body>\n    <script src=\"/7bcd9814996709e48cba40fdbf944244.js\"></script>\n    <script src=\"/26705a09638b035d4b80248aacad4baa.js\"></script>\n\n    <script>var scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setClearColor(0x333333);\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nwindow.addEventListener('resize', function () {\n  var width = window.innerWidth;\n  var height = window.innerHeight;\n  renderer.setSize(width, height);\n  camera.aspect = width / height;\n  camera.updateProjectionMatrix();\n});\ncontrols = new THREE.FlyControls(camera, renderer.domElement); // create the shape\n\nvar stationaryGeometry = new THREE.Geometry();\nvar movingGeometry = new THREE.Geometry();\nstationaryGeometry.vertices.push(new THREE.Vector3(-10, 0, 0));\nstationaryGeometry.vertices.push(new THREE.Vector3(0, 0, 0));\nstationaryGeometry.vertices.push(new THREE.Vector3(10, 0, 0));\nmovingGeometry.vertices.push(new THREE.Vector3(-10, -1, 0));\nmovingGeometry.vertices.push(new THREE.Vector3(0, -1, 0));\nmovingGeometry.vertices.push(new THREE.Vector3(10, -1, 0)); // create a material, color, or image texture\n\nvar stationaryMaterial = new THREE.LineBasicMaterial({\n  color: 0x9f8ec2\n});\nvar movingMaterial = new THREE.LineBasicMaterial({\n  color: 0x5f9ea0\n});\nvar stationaryLine = new THREE.Line(stationaryGeometry, stationaryMaterial);\nvar movingLine = new THREE.Line(movingGeometry, movingMaterial);\ncamera.position.z = 3;\nscene.add(stationaryLine);\nscene.add(movingLine);\nconsole.log(scene); // game logic\n// draw Scene\n\nvar render = function render() {\n  renderer.render(scene, camera);\n}; // run game loop (update, render, repeate)\n\n\nvar GameLoop = function GameLoop() {\n  requestAnimationFrame(GameLoop);\n  render();\n};\n\nGameLoop();</script>\n</body></html>\n"},"hash":"27ed8b8cd9af44d8c51f7a6b7e65a9fe","cacheData":{"env":{}}}